<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd"
       default-lazy-init="true">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/{userType}/login"/>
        <property name="successUrl" value="/{userType}"/>
        <property name="unauthorizedUrl" value="/{userType}/login"/>
        <property name="filterChainDefinitions">
            <value>
            	
            	/**/payment/notify/async/** = anon 
            	/guest/** = anon
                /common/captcha/** = anon
                /resources/** = anon
                /file/** = anon
                /wf/** = anon
                /*/register = anon
                /*/register/** = anon
                /*/password/** = anon

                /websocket/** = authc
                /druid/** = authc
                /*/login = authc
                /*/login/mail/resend = anon
                /*/logout = logout
                /** = path,user
            </value>
        </property>
        <property name="filters">
            <map>
                <entry key="path" value-ref="pathFilter"/>
                <!--拦截需要登录以及使用自动功能才能访问的资源-->
                <entry key="user" value-ref="userFilter"/>
                <!--拦截需要登录才能访问的资源-->
                <entry key="authc" value-ref="authenticationFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
            </map>
        </property>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <!--单位秒，15552000：6个月-->
        <property name="maxAge" value="15552000"/>
    </bean>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="authenticationRealm"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <bean id="pathFilter" class="com.borsam.web.security.shiro.filter.UserTypePathMatchingFilter">
    </bean>

    <bean id="userFilter" class="com.borsam.web.security.shiro.filter.UserFilter">
    </bean>

    <bean id="logoutFilter" class="com.borsam.web.security.shiro.filter.LogoutFilter">
        <property name="redirectUrl" value="/{userType}/login" />
    </bean>

    <bean id="authenticationRealm" class="com.borsam.web.security.shiro.realm.AuthenticationRealm">
        <property name="authorizationCacheName" value="authorization"/>
    </bean>

    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>

    <bean id="authenticationFilter" class="com.borsam.web.security.shiro.filter.AuthenticationFilter">
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>