<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd"
       default-lazy-init="true">

	<context:property-placeholder location="classpath*:/system.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
    <aop:aspectj-autoproxy expose-proxy="true"/>
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.**.web.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<!--注解事务，加了才生效??-->
		<context:include-filter type="annotation"  expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<mvc:annotation-driven  conversion-service="conversionService" validator="validator">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="jsonDataMapper"/>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
						<value>text/json</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="ignoreAcceptHeader" value="true"/>-->
    <!--</bean>-->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="favorPathExtension" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="favorParameter" value="true"/>
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
                <entry key="html" value="text/html"/>
                <entry key="xls" value="application/vnd.ms-excel"/>
            </map>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/jsp" />
                    <property name="suffix" value=".jsp" />
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    <!-- <property name="extractValueFromSingleKeyModel" value="true"/> -->
                    <property name="prettyPrint" value="true"/>
					<property name="objectMapper" ref="jsonDataMapper"/>
                    <property name="contentType" value="application/json"/>
                    <property name="jsonpParameterNames">
                        <set>
                            <value>jsonp</value>
                            <value>callback</value>
                        </set>
                    </property>
                </bean>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <property name="marshaller">
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                            <!-- 启用annotation -->
                            <property name="autodetectAnnotations" value="true" />
                            <property name="encoding" value="utf-8"/>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler/>

	<mvc:view-controller path="/" view-name="redirect:/index"/>
    <!--<bean class="com.hiteam.common.web.spring.listener.DebugRequestListener"/>-->
	<bean id="jsonDataMapper" class="com.hiteam.common.util.json.JsonDataMapping" />

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!--页面传递的字符串或整型转换为对应的枚举类型-->
                <bean class="com.hiteam.common.util.spring.converter.EnumConverter"/>
                <!--<bean class="com.hiteam.common.util.spring.converter.BooleanConverter"/>-->
            </set>
        </property>
    </bean>

	<!-- 拦截器链 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/admin/excelController/**"/>
            <mvc:exclude-mapping path="/*/register/**"/>
            <mvc:exclude-mapping path="/**/payment/notify/async/**"/>
			<bean id="tokenInterceptor" class="com.hiteam.common.web.spring.interceptor.TokenInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="locale"/>
			</bean>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<property name="cacheSeconds" value="0" />
			</bean>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="openSessionInViewInterceptor" class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
				<property name="entityManagerFactory" ref="entityManagerFactory" />
			</bean>
		</mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/org/**"/>
            <mvc:exclude-mapping path="/org"/>
            <mvc:exclude-mapping path="/org/"/>
            <mvc:exclude-mapping path="/org/organization/add"/>
            <mvc:exclude-mapping path="/org/organization/**/edit"/>
            <mvc:exclude-mapping path="/org/organization/save"/>
            <mvc:exclude-mapping path="/org/organization/update"/>
            <mvc:exclude-mapping path="/org/register/**"/>
            <mvc:exclude-mapping path="/org/password/**"/>
            <mvc:exclude-mapping path="/org/login/**"/>
            <mvc:exclude-mapping path="/org/logout"/>
            <bean id="orgInterceptor" class="com.borsam.web.spring.interceptor.OrgInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/doctor/**"/>
            <mvc:exclude-mapping path="/doctor"/>
            <mvc:exclude-mapping path="/doctor/"/>
            <mvc:exclude-mapping path="/doctor/home"/>
            <mvc:exclude-mapping path="/doctor/doctor/add"/>
            <mvc:exclude-mapping path="/doctor/doctor/**/edit"/>
            <mvc:exclude-mapping path="/doctor/doctor/save"/>
            <mvc:exclude-mapping path="/doctor/doctor/update"/>
            <mvc:exclude-mapping path="/doctor/password/**"/>
            <mvc:exclude-mapping path="/doctor/login/**"/>
            <mvc:exclude-mapping path="/doctor/logout"/>
            <bean id="doctorInterceptor" class="com.borsam.web.spring.interceptor.DoctorInterceptor"/>
        </mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<mvc:mapping path="/org/**" />
			<mvc:mapping path="/doctor/**" />
			<mvc:mapping path="/patient/**" />
			<bean id="logInterceptor" class="com.hiteam.common.web.spring.interceptor.LogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

    <websocket:handlers>
        <websocket:mapping path="/admin/websocket/log/infos" handler="extLogWebsocketEndPoint"/>
        <websocket:handshake-interceptors>
            <bean class="com.borsam.web.controller.admin.log.ExtHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!-- 错误拦截器，统一处理 -->
	<bean id="exceptionResolver" class="com.hiteam.common.web.spring.exception.ExtSimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- shiro未授权异常处理 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">
					redirect:/login
				</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">
					redirect:/login
				</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="INFO" />
		<property name="defaultErrorView" value="/common/error" />
	</bean>

	<aop:config proxy-target-class="true"/>

	<!-- 支持 Shiro对Controller的方法级AOP安全控制-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>